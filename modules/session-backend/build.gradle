plugins {
    id("com.github.johnrengelman.shadow") version "7.0.0"
    id("io.micronaut.application") version "2.0.4"
    id("com.adarshr.test-logger") version "2.0.0"
    id("com.google.cloud.tools.jib") version "2.8.0"
}

micronaut {
    runtime("netty")
    testRuntime("junit5")
    processing {
        incremental(true)
        annotations("io.belldj.pg.sessions")
    }
}

dependencies {

    annotationProcessor("io.micronaut:micronaut-http-validation")
    annotationProcessor("io.micronaut.data:micronaut-data-processor")
    annotationProcessor("org.immutables:value:2.8.2")
    annotationProcessor("org.mapstruct:mapstruct-processor:1.5.0.Beta1")
    annotationProcessor("io.micronaut.openapi:micronaut-openapi:3.1.0")

    implementation("io.micronaut:micronaut-http-client")
    implementation("io.micronaut:micronaut-runtime")
    implementation("io.micronaut.data:micronaut-data-jdbc:3.1.1")
    implementation("io.micronaut.flyway:micronaut-flyway")
//    implementation("io.micronaut.gcp:micronaut-gcp-pubsub")
    implementation("io.micronaut.problem:micronaut-problem-json")
    implementation("io.micronaut.reactor:micronaut-reactor")
    implementation("io.micronaut.reactor:micronaut-reactor-http-client")
    implementation("io.micronaut.sql:micronaut-jdbc-hikari")
    implementation("javax.annotation:javax.annotation-api")
    implementation("io.micronaut:micronaut-validation")
    implementation("org.immutables:value:2.8.2")
    implementation("org.mapstruct:mapstruct:1.5.0.Beta1")
    implementation('javax.inject:javax.inject:1') // needed for mapstruct component model of jsr330
    implementation('org.postgresql:postgresql:42.2.23')
    implementation("io.swagger.core.v3:swagger-annotations")

    runtimeOnly("ch.qos.logback:logback-classic")
    runtimeOnly("com.h2database:h2")

    testAnnotationProcessor("org.mapstruct:mapstruct-processor:1.5.0.Beta1") // if in test code
    testAnnotationProcessor("org.immutables:value:2.8.2")

    testImplementation(platform("org.testcontainers:testcontainers-bom:1.16.0"))

    testImplementation("org.testcontainers:postgresql")
    testImplementation("org.assertj:assertj-core")
    testImplementation("org.testcontainers:junit-jupiter")

    testRuntimeOnly("org.testcontainers:postgresql")
    testRuntimeOnly("org.postgresql:postgresql:42.2.23")

    compileOnly("org.graalvm.nativeimage:svm")

}

jib {
    to {
        image = "pg-sessions-backend:1.0.0"
    }
    from {
        image = "registry://openjdk:17-jdk-alpine"
    }
}

application {
    mainClass.set("io.belldj.pg.sessions.Application")
}

java {
    sourceCompatibility = JavaVersion.toVersion("17")
    targetCompatibility = JavaVersion.toVersion("17")
}

compileJava {
    options.compilerArgs += [
        '-Amapstruct.defaultComponentModel=jsr330'
//        '-Amapstruct.verbose=false'
    ]
}

test {
    useJUnitPlatform()
    testlogger {
        theme 'mocha'
        showExceptions true
        showStackTraces true
        showFullStackTraces false
        showCauses true
        slowThreshold 2000
        showSummary true
        showSimpleNames false
        showPassed true
        showSkipped true
        showFailed true
        showStandardStreams false
        showPassedStandardStreams true
        showSkippedStandardStreams true
        showFailedStandardStreams true
    }
}



